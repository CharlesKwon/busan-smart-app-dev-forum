작업 순서

1. GeoNames 검색 서비스 사용하기
http://www.geonames.org/export/geonames-search.html

가입을 하면 다음의 경로에서 free webservice를 신청할 수 있습니다.
http://www.geonames.org/manageaccount

2. JSON 형태 데이터 반환을 위해서 뒤에 JSON 붙여주고, 결과 확인
http://api.geonames.org/searchJSON?q=busan&maxRows=10&username=demo

3. 결과를 복사해서
{"totalResultsCount":1927,"geonames":[{"adminCode1":"10","lng":"129.04028","geonameId":1838524,"toponymName":"Busan","countryId":"1835841","fcl":"P","population":3678555,"countryCode":"KR","name":"Busan","fclName":"city, village,...","countryName":"South Korea","fcodeName":"seat of a first-order administrative division","adminName1":"Busan","lat":"35.10278","fcode":"PPLA"},{"adminCode1":"10","lng":"129.05","geonameId":1838519,"toponymName":"Busan","countryId":"1835841","fcl":"A","population":3525913,"countryCode":"KR","name":"Busan","fclName":"country, state, region,...","countryName":"South Korea","fcodeName":"first-order administrative division","adminName1":"Busan","lat":"35.13333","fcode":"ADM1"},{"adminCode1":"10","lng":"128.93822","geonameId":6300424,"toponymName":"Busan / Gimhae International Airport","countryId":"1835841","fcl":"S","population":0,"countryCode":"KR","name":"Busan / Gimhae International Airport","fclName":"spot, building, farm","countryName":"South Korea","fcodeName":"airport","adminName1":"Busan","lat":"35.17953","fcode":"AIRP"},{"adminCode1":"10","lng":"129.12918","geonameId":9853733,"toponymName":"Busan Port","countryId":"1835841","fcl":"L","population":0,"countryCode":"KR","name":"Busan Harbour","fclName":"parks,area, ...","countryName":"South Korea","fcodeName":"port","adminName1":"Busan","lat":"35.15192","fcode":"PRT"},{"adminCode1":"10","lng":"128.98725","geonameId":1979341,"toponymName":"Saha-gu","countryId":"1835841","fcl":"A","population":374248,"countryCode":"KR","name":"Saha-gu","fclName":"country, state, region,...","countryName":"South Korea","fcodeName":"second-order administrative division","adminName1":"Busan","lat":"35.08552","fcode":"ADM2"},{"adminCode1":"10","lng":"129.21389","geonameId":1842966,"toponymName":"Gijang","countryId":"1835841","fcl":"P","population":43064,"countryCode":"KR","name":"Gijang","fclName":"city, village,...","countryName":"South Korea","fcodeName":"seat of a third-order administrative division","adminName1":"Busan","lat":"35.24417","fcode":"PPLA3"},{"adminCode1":"10","lng":"129.078","geonameId":1834199,"toponymName":"Dongnae-gu","countryId":"1835841","fcl":"A","population":282732,"countryCode":"KR","name":"Dongnae-gu","fclName":"country, state, region,...","countryName":"South Korea","fcodeName":"second-order administrative division","adminName1":"Busan","lat":"35.20447","fcode":"ADM2"},{"adminCode1":"10","lng":"129.16792","geonameId":8462808,"toponymName":"Haeundae-gu","countryId":"1835841","fcl":"A","population":423167,"countryCode":"KR","name":"Haeundae-gu","fclName":"country, state, region,...","countryName":"South Korea","fcodeName":"second-order administrative division","adminName1":"Busan","lat":"35.16665","fcode":"ADM2"},{"adminCode1":"10","lng":"128.933","geonameId":8462812,"toponymName":"Gangseo-gu","countryId":"1835841","fcl":"A","population":66295,"countryCode":"KR","name":"Gangseo-gu","fclName":"country, state, region,...","countryName":"South Korea","fcodeName":"second-order administrative division","adminName1":"Busan","lat":"35.1593","fcode":"ADM2"},{"adminCode1":"10","lng":"129.0901","geonameId":8462814,"toponymName":"Geumjeong-gu","countryId":"1835841","fcl":"A","population":264880,"countryCode":"KR","name":"Geumjeong-gu","fclName":"country, state, region,...","countryName":"South Korea","fcodeName":"second-order administrative division","adminName1":"Busan","lat":"35.25863","fcode":"ADM2"}]}

4. 붙여넣기 해서 모델 생성하기
    public class Rootobject
    {
        public int totalResultsCount { get; set; }
        public Geoname[] geonames { get; set; }
    }

    public class Geoname
    {
        public string adminCode1 { get; set; }
        public string lng { get; set; }
        public int geonameId { get; set; }
        public string toponymName { get; set; }
        public string countryId { get; set; }
        public string fcl { get; set; }
        public int population { get; set; }
        public string countryCode { get; set; }
        public string name { get; set; }
        public string fclName { get; set; }
        public string countryName { get; set; }
        public string fcodeName { get; set; }
        public string adminName1 { get; set; }
        public string lat { get; set; }
        public string fcode { get; set; }
    }


5. GeoNamesServiceHelper 생성하기

    public class GeoNamesServiceHelper
    {
        private static GeoNamesServiceHelper _instance;
        /// <summary>
        /// 싱글톤 인스턴스
        /// </summary>
        public static GeoNamesServiceHelper Instance
        {
            get { return _instance = _instance ?? new GeoNamesServiceHelper(); }
        }
        /// <summary>
        /// Geonames 조회
        /// </summary>
        /// <param name="query"></param>
        /// <returns></returns>
        public async Task<Rootobject> GetGeonames(string query)
        {
            if (string.IsNullOrEmpty(query)) return null;
            //username부분은 가입을 한 후에 사용해야 합니다.
            var uri = $"http://api.geonames.org/searchJSON?q={query}&maxRows=50&username=kaki104";
            //서비스 호출
            using (var client = new HttpClient())
            {
                var result = await client.GetStringAsync(new Uri(uri));
                if (string.IsNullOrEmpty(result)) return null;
                //JSON데이터를 모델로 변환
                var resultRoot = JsonConvert.DeserializeObject<Rootobject>(result);
                return resultRoot;
            }
        }
    }


6. MainPageViewModel.cs 조회 커맨드 수정하기

            //검색 커맨드 생성
            FindCommand = new DelegateCommand(async () =>
            {
                //await AddDummyCityAsync();
                var result = await GeoNamesServiceHelper.Instance.GetGeonames(InputCity);

                ResultList.Clear();

                if (result.geonames == null) return;

                foreach (var geoname in result.geonames)
                {
                    ResultList.Add(new City
                    {
                        CityName = geoname.name,
                        Lat = geoname.lat,
                        Lng = geoname.lng,
                        Population = geoname.population
                    });
                }
            }, () => !string.IsNullOrEmpty(InputCity));


7. MapPageViewModel.cs 수정

        public override async Task OnNavigatedToAsync(object parameter, NavigationMode mode, IDictionary<string, object> suspensionState)
        {
            //전달된 city 정보를 SelectedCity에 입력
            var para = parameter?.ToString();
            if (string.IsNullOrEmpty(para)) return;

            SelectedCity = JsonConvert.DeserializeObject<City>(para);

            //지도에 표시하기 위해서 좌표 따기
            if (string.IsNullOrEmpty(SelectedCity.Lat) || string.IsNullOrEmpty(SelectedCity.Lng)) return;
            var latIdx = SelectedCity.Lat.IndexOf('.');
            var lngIdx = SelectedCity.Lng.IndexOf('.');
            var lat = SelectedCity.Lat.Length > 0 ? SelectedCity.Lat.Substring(0, latIdx + 4) : "";
            var lng = SelectedCity.Lng.Length > 0 ? SelectedCity.Lng.Substring(0, lngIdx + 4) : "";

            //호출할 위치 입력
            Uri = new Uri($"http://www.geonames.org/maps/google_{lat}_{lng}.html");

            await Task.CompletedTask;
        }